version: '3.8'

services:
  adso-chat-backend:
    build:
      context: backend
      dockerfile: Dockerfile
    image: adso-chat-backend:latest
    networks:
      - mynetwork
    container_name: adso-chat-backend
    ports:
      - "8080:8080"
    stdin_open: true # Corresponds to -i in `docker run`
    tty: true        # Usually needed alongside stdin_open to keep the container running
    restart: unless-stopped  # Ensures the container restarts if it stops for any reason other than being manually stopped


  adso-chat-ollama:
    build:
      context: ollama
      dockerfile: Dockerfile
    image: adso-chat-ollama
    networks:
      - mynetwork
    container_name: adso-chat-ollama
    ports:
      - "11434:11434"
    volumes:
      - type: bind
        source: ./data
        target: /data
    restart: unless-stopped


  adso-ui:
   build:
     context: frontend
     dockerfile: Dockerfile
   image: adso-ui
   networks:
    - mynetwork
   container_name: adso-ui
   ports:
    - "80:80"
   restart: unless-stopped

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak_web
    environment:

      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev --http-port=8081
    depends_on:
      keycloakdb:
        condition: service_healthy
    networks:
        - keycloak-network
    volumes:
        - keycloak_data:/opt/keycloak/data
    ports:
      - 8081:8081

  keycloakdb:
    image: postgres:13
    container_name: keycloakdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
        - keycloak-network
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
        interval: 10s
        retries: 5

volumes:
    ollama_data:
    postgres_data:
    keycloak_data:

networks:
  mynetwork:
    driver: bridge
  keycloak-network:
